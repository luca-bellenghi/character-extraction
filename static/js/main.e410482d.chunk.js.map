{"version":3,"sources":["const.js","ResetButton.js","DrawChar.js","AvailableLetters.js","Buttons.js","ExtractedLetters.js","App.js","reportWebVitals.js","index.js"],"names":["ALPHABET","ResetButton","props","className","onClick","window","confirm","setSelected","setNotSelectedLetters","DrawChar","letter","AvailableLetters","id","map","selectedLetters","indexOf","Buttons","console","log","length","Button","disabled","result","notSelectedLetters","item","Math","floor","random","filter","e","push","randomselection","variant","startIcon","slice","undoselection","endIcon","ExtractedLetters","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e410482d.chunk.js","sourcesContent":["export const ALPHABET = [\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z',\n];\n","import { ALPHABET } from './const';\nimport { FaTrashAlt } from 'react-icons/fa';\n\nfunction ResetButton(props) {\n  return (\n    <div className=\"reset\">\n      <button\n        className=\"reset-link\"\n        onClick={() => {\n          if (window.confirm('Vuoi azzerare le estrazioni?')) {\n            props.setSelected([]);\n            props.setNotSelectedLetters(ALPHABET);\n          }\n        }}\n      >\n        <FaTrashAlt />\n      </button>\n    </div>\n  );\n}\n\nexport default ResetButton;\n","function DrawChar(props) {\n  return <>{props.letter}</>;\n}\nexport default DrawChar;\n","import { ALPHABET } from './const';\nimport DrawChar from './DrawChar';\n\nfunction AvailableLetters(props) {\n  return (\n    <>\n      <h2> Lettere da estrarre</h2>\n      <div id=\"letters-container\">\n        {ALPHABET.map((letter) => (\n          <div\n            key={letter}\n            className={`letter letter-${letter} ${\n              props.selectedLetters.indexOf(letter) > -1 ? 'extracted' : ''\n            }`}\n          >\n            <DrawChar letter={letter} />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\nexport default AvailableLetters;\n","import Button from '@mui/material/Button';\nimport { FaHistory, FaPlay } from 'react-icons/fa';\n\nlet randomselection = (selectedLetters, notSelectedLetters) => {\n  if (selectedLetters.length === 26) {\n    return;\n  }\n  var item =\n    notSelectedLetters[Math.floor(Math.random() * notSelectedLetters.length)];\n\n  notSelectedLetters = notSelectedLetters.filter((e) => e !== item);\n  selectedLetters.push(item);\n  return [selectedLetters, notSelectedLetters];\n};\n\nlet undoselection = (selectedLetters, notSelectedLetters) => {\n  if (selectedLetters.length === 0) {\n    return;\n  }\n  let item = selectedLetters[selectedLetters.length - 1];\n  selectedLetters = selectedLetters.slice(0, selectedLetters.length - 1);\n  notSelectedLetters.push(item);\n  return [selectedLetters, notSelectedLetters];\n};\n\nfunction Buttons(props) {\n  console.log(props.selectedLetters.length);\n  return (\n    <div id=\"button-container\">\n      <Button\n        disabled={props.selectedLetters.length === 26}\n        onClick={() => {\n          let result = randomselection(\n            props.selectedLetters,\n            props.notSelectedLetters\n          );\n          props.setSelected(result[0]);\n          props.setNotSelectedLetters(result[1]);\n        }}\n        id=\"extract\"\n        variant=\"contained\"\n        startIcon={<FaPlay />}\n      >\n        Estrai\n      </Button>\n      <Button\n        disabled={props.selectedLetters.length === 0}\n        onClick={() => {\n          let result = undoselection(\n            props.selectedLetters,\n            props.notSelectedLetters\n          );\n          props.setSelected(result[0]);\n          props.setNotSelectedLetters(result[1]);\n        }}\n        id=\"undo\"\n        variant=\"outlined\"\n        endIcon={<FaHistory />}\n      >\n        Annulla\n      </Button>\n    </div>\n  );\n}\nexport default Buttons;\n","import DrawChar from './DrawChar';\n\nfunction ExtractedLetters(props) {\n  return (\n    <div id=\"extracted-letters-containers\">\n      <h2> Lettere estratte</h2>\n      <div\n        id=\"last\"\n        className={`${props.selectedLetters.length > 0 ? 'extracted' : 'text'}`}\n      >\n        <span className=\"extracted-letter\">\n          {props.selectedLetters.length > 0\n            ? props.selectedLetters[props.selectedLetters.length - 1]\n            : 'Nessuna estrazione effettuata'}\n        </span>\n      </div>\n      <div id=\"extracted-letters\">\n        {props.selectedLetters.length !== 0\n          ? props.selectedLetters.map((letter) => (\n              <div\n                key={letter}\n                className={`letter letter-${letter}`}\n                //id={'letter-' + letter}\n              >\n                <DrawChar letter={letter} />\n              </div>\n            ))\n          : ''}\n      </div>\n    </div>\n  );\n}\n\nexport default ExtractedLetters;\n","import './App.css';\nimport { useState } from 'react';\nimport ResetButton from './ResetButton';\nimport AvailableLetters from './AvailableLetters';\nimport Buttons from './Buttons';\nimport ExtractedLetters from './ExtractedLetters';\nimport { ALPHABET } from './const';\n\nfunction App() {\n  const [selectedLetters, setSelected] = useState([]);\n  const [notSelectedLetters, setNotSelectedLetters] = useState(ALPHABET);\n\n  return (\n    <div className=\"App\">\n      <ResetButton\n        setSelected={setSelected}\n        setNotSelectedLetters={setNotSelectedLetters}\n      />\n      <AvailableLetters selectedLetters={selectedLetters} />\n      <Buttons\n        selectedLetters={selectedLetters}\n        notSelectedLetters={notSelectedLetters}\n        setSelected={setSelected}\n        setNotSelectedLetters={setNotSelectedLetters}\n      />\n      <ExtractedLetters selectedLetters={selectedLetters} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport React from 'react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}